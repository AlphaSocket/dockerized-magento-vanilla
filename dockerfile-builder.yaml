project: 
  title: &project_title Alphasocket/dockerized-magento-vanilla
  codename: &project_codename magento-vanilla
  description: Magento vanilla container

#
# Init builder
#
general:
  envvars:
    docker:
      user: &general_docker_user 03192859189254
      registry: registry.hub.docker.com
    keys:
      True: "True"
      false: "False"
      dev: "dev"
      prd: "prd"
    
#
# Build process
# Creates dockerfile and file used in it
#
build:
  envvars:
    name: *project_codename
    branch:
      valueFromCommand: 'git rev-parse --abbrev-ref HEAD'
    version:
      valueFromCommand: 'echo $BUILD_BRANCH | cut -d \- -f 1'
    env:
      valueFromCommand: 'env=$(echo $BUILD_BRANCH | cut -d \- -f 2); [ "$env" = "$BUILD_VERSION" ] && echo $GENERAL_KEYS_PRD || echo $env'
    # Docker
    dockerfile:
      image: registry.hub.docker.com/alphasocket/magento-cli-alpine:latest
      workdir: /var/www/html
      cmd: /usr/sbin/crond -f -l $CONFIG_CRON_LOG_LEVEL
  import:
    - "mage_install_env:/usr/local/mage_install_env"

#
# Setup process injected in dockerfile
#
setup:
  # Setup env 
  envvars:
    magento:
      install:
        script:
          url: https://raw.githubusercontent.com/AlphaSocket/mage-install/master/install
          path: $CONFIG_PATHS_BINARIES/mage-install
    dependencies:
      # Dependencies installed in the image
      setup: ""
      # Dependencies installed during runtime
      config: ""
  # Setup Processes
  processes:
    
    - title: "Install mage-install script "
      commands: 
        - curl -o $SETUP_MAGENTO_INSTALL_SCRIPT_PATH $SETUP_MAGENTO_INSTALL_SCRIPT_URL 
        - chmod +x $SETUP_MAGENTO_INSTALL_SCRIPT_PATH

#
# Config process run just before the entrypoint
#
config:
  # Config env 
  envvars:
    project:
      codename: "vanilla"
      description: "Magento Vanilla"
    user: magento-vanilla
    group: magento
    admin:
      username: "admin"
      lastname: "Admin"
      firstname: "Admin"
      email: "jhon@doe.ie"
      pass: "password.123"     

    magento:
      version: "magento-mirror-1.9.3.6"
      user: $CONFIG_USER
      group: $CONFIG_GROUP
      url: "http://www.magento.vanilla/"
      install:
        folder: "/var/www/html"
        env:
          path: "/usr/local/mage_install_env"
      use:
        rewrites: "yes"
        secure: "no"
        base_url: ""
        secure_admin: "no"
      skip_url_validation: "yes" 
      locale: en_IE
      timezone: "Europe/Dublin"
      currency: "EUR"
      session:
        save: "db"
      admin:
        frontname: "admin"
      backend:
        frontname: "admin"
      disable:
        cache: "no"
      set_privileges_ownership: "no"
      developer_mode: "yes"
    db:
      host: "127.0.0.1"
      name: "database"
      user: "root"
      pass: "root"
      prefix: ""
    composer:
      init: "no"

  processes:

    - title: "Clean installation folder"
      commands:
        - rm ${CONFIG_MAGENTO_INSTALL_FOLDER}/* -rf 

    - title: "Wait until the DB is ready"
      commands:
        - CONDITION="mysql -h${CONFIG_DB_HOST} -u${CONFIG_DB_USER} -p${CONFIG_DB_PASS}"
        - MAX_TRIES=300
        - SECONDS_BETWEEN_TRIES=1
        - c=0
        - while ! eval "$CONDITION"; 
          do 
            if [ $c -ge ${MAX_TRIES} ]; then exit 1; else c=$(($c + 1)); fi;
            echo "Waiting for db.. Try $c failed"; 
            sleep ${SECONDS_BETWEEN_TRIES}; 
          done

    - title: "Install magento"
      commands:
        - $SETUP_MAGENTO_INSTALL_SCRIPT_PATH $CONFIG_MAGENTO_INSTALL_ENV_PATH 1>/dev/stdout 2>/dev/stderr

test:
  envvars:
    name: $BUILD_NAME
    port: 30080
    db:
      name: magento_test
      user: magento
      pass: vanillaPass
      root:
        pass: root
    dockerfile:
      tag: 
        user: *general_docker_user
        name: $BUILD_NAME
        version: $BUILD_BRANCH

  processes:
    #
    # Starting
    #
    - title: "Starting pause container"
      commands:
        - TEST_CONTAINER_PAUSE_ID=$(
            docker run 
              -d --name=${TEST_NAME}-pause-tester
              03192859189254/dockerized-nginx-tester:latest
          )
        - TEST_CONTAINER_PAUSE_STATUS=$(sleep 5 && docker inspect -f '{{.State.Running}}' $TEST_CONTAINER_PAUSE_ID)


    - title: "Starting DB container"
      commands:
        - TEST_CONTAINER_DB_ID=$(
            docker run 
              -d --name=${TEST_NAME}-mariadb-tester
              --net=container:${TEST_NAME}-pause-tester
              -e MYSQL_DATABASE=$TEST_DB_NAME
              -e MYSQL_USER=$TEST_DB_USER
              -e MYSQL_PASSWORD=$TEST_DB_PASS
              -e MYSQL_ROOT_PASSWORD=$TEST_DB_ROOT_PASS
              mariadb:latest
          )
        - TEST_CONTAINER_DB_STATUS=$(sleep 5 && docker inspect -f '{{.State.Running}}' $TEST_CONTAINER_DB_ID)

    - title: "Starting magento-cli container"
      commands:
        - TEST_CONTAINER_MAGENTO_CLI_ID=$(
            docker run 
              -d --name=$TEST_NAME
              --net=container:${TEST_NAME}-pause-tester
              -e CONFIG_DB_NAME=$TEST_DB_NAME
              -e CONFIG_DB_USER=$TEST_DB_USER
              -e CONFIG_DB_PASS=$TEST_DB_PASS
              ${TEST_DOCKERFILE_TAG_USER}/${TEST_DOCKERFILE_TAG_NAME}:${TEST_DOCKERFILE_TAG_VERSION}
          )
        - TEST_CONTAINER_MAGENTO_CLI_STATUS=$(sleep 10 && docker inspect -f '{{.State.Running}}' $TEST_CONTAINER_MAGENTO_CLI_ID)

    - title: "Testing magento-cli container"
      shell_condition: '! "$TEST_CONTAINER_MAGENTO_CLI_STATUS" = "true"'
      commands:
        - echo "Magento-cli container failed, print logs and exiting\n"
        - docker logs $TEST_CONTAINER_MAGENTO_CLI_ID

    - title: "Testing magento installation"
      shell_condition: '"$TEST_CONTAINER_MAGENTO_CLI_STATUS" = "true"'
      commands:
        - MAGENTO_INSTALLATION_REPORT=$(sleep 10 && docker exec $TEST_CONTAINER_MAGENTO_CLI_ID /bin/sh -c "n98-magerun.phar sys:check" )
        - MAGENTO_INSTALLATION_REPORT_TEST=$(echo "$MAGENTO_INSTALLATION_REPORT" | grep -q "app/etc/local.xml" && echo "Success")

    #
    # Echo results
    #
    - title: "Echo failure"
      shell_condition: '! "$MAGENTO_INSTALLATION_REPORT_TEST" = "Success"'
      commands:
        - echo "Magento isntallation failed, print logs and exiting\n"
        - docker logs $TEST_NAME

    - title: "Echo success"
      shell_condition: '"$MAGENTO_INSTALLATION_REPORT_TEST" = "Success"'
      commands:
        - echo "### Test Succeeded\n" 
